name: "Prepare Build"
description: "Prepares the build for Isar Core"
runs:
  using: "composite"
  steps:
    - name: Install latest Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: rustfmt, clippy
    - name: Install LLVM and Clang
      if: runner.os == 'Windows'
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    - name: Install Perl
      if: runner.os == 'Windows'
      uses: shogo82148/actions-setup-perl@v1
      with:
        distribution: strawberry
        perl-version: "5.32"
    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        echo "OPENSSL_SRC_PERL=C:/Strawberry/perl/bin/perl" >> $env:GITHUB_ENV
    # See https://github.com/godot-rust/godot-rust/pull/920
    - name: "Workaround Android NDK due to Rust bug"
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: >
        find -L $ANDROID_SDK_ROOT/ndk/$ANDROID_NDK_VERSION -name libunwind.a
        -execdir sh -c 'echo "INPUT(-lunwind)" > libgcc.a' \;
